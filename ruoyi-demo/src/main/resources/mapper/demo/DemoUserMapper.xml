<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.demo.mapper.DemoUserMapper">
    
    <resultMap type="DemoUser" id="DemoUserResult">
        <result property="userId"    column="user_id"    />
        <result property="deptId"    column="dept_id"    />
        <result property="userName"    column="user_name"    />
        <result property="sex"    column="sex"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <resultMap id="DemoUserDemoOrderResult" type="DemoUser" extends="DemoUserResult">
        <collection property="demoOrderList" notNullColumn="id" javaType="java.util.List" resultMap="DemoOrderResult" />
    </resultMap>

    <resultMap type="DemoOrder" id="DemoOrderResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="orderStatus"    column="order_status"    />
        <result property="addTime"    column="add_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="deleted"    column="deleted"    />
    </resultMap>

    <sql id="selectDemoUserVo">
        select user_id, dept_id, user_name, sex, status, create_time, update_time, del_flag, remark from demo_user
    </sql>

    <select id="selectDemoUserList" parameterType="DemoUser" resultMap="DemoUserResult">
        <include refid="selectDemoUserVo"/>
        <where>  
            <if test="deptId != null "> and dept_id = #{deptId}</if>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="sex != null  and sex != ''"> and sex = #{sex}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectDemoUserById" parameterType="Long" resultMap="DemoUserDemoOrderResult">
        select a.user_id, a.dept_id, a.user_name, a.sex, a.status, a.create_time, a.update_time, a.del_flag, a.remark,
            b.id, b.user_id, b.order_status, b.add_time, b.update_time, b.deleted
        from demo_user a
        left join demo_order b on b.user_id = a.user_id
        where a.user_id = #{userId}
    </select>
        
    <insert id="insertDemoUser" parameterType="DemoUser" useGeneratedKeys="true" keyProperty="userId">
        insert into demo_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptId != null">dept_id,</if>
            <if test="userName != null and userName != ''">user_name,</if>
            <if test="sex != null">sex,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deptId != null">#{deptId},</if>
            <if test="userName != null and userName != ''">#{userName},</if>
            <if test="sex != null">#{sex},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateDemoUser" parameterType="DemoUser">
        update demo_user
        <trim prefix="SET" suffixOverrides=",">
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where user_id = #{userId}
    </update>

    <delete id="deleteDemoUserById" parameterType="Long">
        delete from demo_user where user_id = #{userId}
    </delete>

    <delete id="deleteDemoUserByIds" parameterType="String">
        delete from demo_user where user_id in 
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
    
    <delete id="deleteDemoOrderByUserIds" parameterType="String">
        delete from demo_order where user_id in 
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

    <delete id="deleteDemoOrderByUserId" parameterType="Long">
        delete from demo_order where user_id = #{userId}
    </delete>

    <insert id="batchDemoOrder">
        insert into demo_order( id, user_id, order_status, add_time, update_time, deleted) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.userId}, #{item.orderStatus}, #{item.addTime}, #{item.updateTime}, #{item.deleted})
        </foreach>
    </insert>
</mapper>